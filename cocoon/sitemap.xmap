<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
	<map:components>
		<!-- *********************************** -->
		<!-- Cocoon generators - file is default -->
		<!-- *********************************** -->
		<map:generators default="file">
			<map:generator label="content" logger="sitemap.generator.request" name="request" pool-max="16" src="org.apache.cocoon.generation.RequestGenerator"/>
			<map:generator name="request" src="org.apache.cocoon.generation.RequestGenerator">
				<map:parameter name="generate-attributes" value="true"/>
			</map:generator>
			<map:generator name="search" src="org.apache.cocoon.components.search.LuceneCocoonSearcher" index="index"> </map:generator>
		</map:generators>

		<map:generator label="content" logger="sitemap.generator.directory" name="directory" pool-grow="2" pool-max="16" pool-min="2"
			src="org.apache.cocoon.generation.DirectoryGenerator"/>
		<!-- ************************************* -->
		<!-- Cocoon transformers - xslt is default -->
		<!-- ************************************* -->
		<map:transformers default="xslt">
			<!-- NOTE: This is the default XSLT processor. -->
			<map:transformer logger="sitemap.transformer.xslt" name="xslt" pool-max="32" src="org.apache.cocoon.transformation.TraxTransformer">
				<use-request-parameters>true</use-request-parameters>
				<use-session-parameters>true</use-session-parameters>
				<use-cookie-parameters>false</use-cookie-parameters>
				<xslt-processor-role>xalan</xslt-processor-role>
				<check-includes>true</check-includes>
			</map:transformer>
			<map:transformer name="index" logger="sitemap.transformer.luceneindextransformer" src="org.apache.cocoon.transformation.LuceneIndexTransformer"/>
			<map:transformer name="xinclude" src="org.apache.cocoon.transformation.XIncludeTransformer"/>
		</map:transformers>

		<map:serializers>
			<map:serializer name="kml" mime-type="application/vnd.google-earth.kml+xml" src="org.apache.cocoon.serialization.XMLSerializer">
				<encoding>UTF-8</encoding>
			</map:serializer>
			<map:serializer name="atom" mime-type="application/xml" src="org.apache.cocoon.serialization.XMLSerializer">
				<encoding>UTF-8</encoding>
				<indent>yes</indent>
			</map:serializer>
			<map:serializer name="rss" mime-type="application/xml" src="org.apache.cocoon.serialization.XMLSerializer">
				<encoding>UTF-8</encoding>
				<indent>yes</indent>
			</map:serializer>
			<map:serializer name="csv" mime-type="text/csv" src="org.apache.cocoon.serialization.TextSerializer">
				<encoding>UTF-8</encoding>
			</map:serializer>
			<map:serializer name="rdf" mime-type="application/rdf+xml" src="org.apache.cocoon.serialization.XMLSerializer">
				<encoding>UTF-8</encoding>
				<indent>yes</indent>
			</map:serializer>
			<map:serializer name="xml" mime-type="application/xml" src="org.apache.cocoon.serialization.XMLSerializer">
				<encoding>UTF-8</encoding>
				<indent>yes</indent>
			</map:serializer>
			<map:serializer name="xhtml+rdfa" mime-type="application/xhtml+xml" src="org.apache.cocoon.serialization.XMLSerializer">
				<encoding>UTF-8</encoding>
				<doctype-public>-//W3C//DTD XHTML+RDFa 1.1//EN</doctype-public>
				<doctype-system>http://www.w3.org/MarkUp/DTD/xhtml-rdfa-2.dtd</doctype-system>
				<indent>yes</indent>
			</map:serializer>
		</map:serializers>
	</map:components>

	<!-- =========================== Views =================================== -->

	<map:views>
		<map:view name="content" from-label="content">
			<map:serialize type="xml"/>
		</map:view>
		<map:view from-label="content" name="pretty-content">
			<map:transform src="context://stylesheets/system/xml2html.xslt"/>
			<map:serialize type="html"/>
		</map:view>
		<map:view name="links" from-position="last">
			<map:serialize type="links"/>
		</map:view>
		<map:view from-label="record" name="record">
			<map:serialize type="xml"/>
		</map:view>
		<map:view name="content" from-label="content">
			<map:serialize type="xml"/>
		</map:view>
		<map:view from-label="basiccontent" name="basiccontent">
			<map:serialize type="xml"/>
		</map:view>
	</map:views>

	<!-- =========================== Pipelines ================================= -->

	<map:pipelines>

		<map:component-configurations>
			<global-variables>
				<!-- static variables, referred to as generate calls in pipelines.  
					These only need to be changed if Solr and Orbeon are run on a different server or Tomcat application than Cocoon -->
				<solr-url>http://localhost:8080/solr/nomisma/</solr-url>
				<id-path>/usr/local/projects/nomisma-ids/id</id-path>
				<sparql-url>http://localhost:3030/nomisma/query</sparql-url>
				<geonames_api_key>anscoins</geonames_api_key>
				<flickr_api_key>ffb0c1787046578c9e5490e9a133a231</flickr_api_key>
			</global-variables>
		</map:component-configurations>

		<map:pipeline>
			<map:match pattern="**.css">
				<map:read src="css/{1}.css" mime-type="text/css"/>
			</map:match>

			<map:match pattern="**.ico">
				<map:read src="{1}.ico" mime-type="image/png"/>
			</map:match>

			<map:match pattern="**.jpg">
				<map:read src="{1}.jpg" mime-type="image/jpeg"/>
			</map:match>

			<map:match pattern="**.jpeg">
				<map:read src="{1}.jpeg" mime-type="image/jpeg"/>
			</map:match>

			<map:match pattern="**.jp2">
				<map:read src="{1}.jp2" mime-type="image/jp2"/>
			</map:match>

			<map:match pattern="**.gif">
				<map:read src="{1}.gif" mime-type="image/gif"/>
			</map:match>

			<map:match pattern="**.png">
				<map:read src="{1}.png" mime-type="image/png"/>
			</map:match>

			<!-- allow javascript to pass through for script tags //-->
			<map:match pattern="**.js">
				<map:read src="{1}.js" mime-type="text/javascript"/>
			</map:match>

			<map:match pattern="">
				<map:generate src="xml/config.xml" label="record"/>
				<map:transform src="xslt/index.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="html"/>
			</map:match>

			<!-- list all ids -->
			<map:match pattern="id/">
				<map:generate type="directory" src="{global:id-path}">
					<map:parameter name="depth" value="2"/>
				</map:generate>
				<map:transform src="xslt/id.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="xhtml+rdfa"/>
			</map:match>

			<!-- display pipelines -->
			<map:match pattern="id/*.kml">
				<map:generate src="{global:id-path}/{1}.txt"/>
				<map:transform src="xslt/geographic/object-to-kml.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="id" value="{1}"/>
					<map:parameter name="serverName" value="{request:serverName}"/>
					<map:parameter name="serverPort" value="{request:serverPort}"/>
					<map:parameter name="requestURI" value="{request:requestURI }"/>
				</map:transform>
				<map:transform type="cinclude"/>
				<map:serialize type="kml"/>
			</map:match>

			<map:match pattern="id/*.nuds">
				<map:generate src="{global:id-path}/{1}.txt"/>
				<map:transform src="xslt/apis/getNuds.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="identifiers" value="{1}"/>
					<map:parameter name="id-path" value="{global:id-path}"/>
				</map:transform>
				<map:serialize type="rdf"/>
			</map:match>
			
			<map:match pattern="id/*.pelagios.rdf">
				<map:read src="cocoon:/get_pelagios?q={1}"/>
			</map:match>

			<map:match pattern="id/*.rdf">
				<map:generate src="{global:id-path}/{1}.txt"/>
				<map:transform src="xslt/display/rdf.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="id" value="{1}"/>
					<map:parameter name="serverName" value="{request:serverName}"/>
					<map:parameter name="serverPort" value="{request:serverPort}"/>
					<map:parameter name="requestURI" value="{request:requestURI }"/>
				</map:transform>
				<map:transform type="cinclude"/>
				<map:serialize type="rdf"/>
			</map:match>

			<map:match pattern="id/*.xml">
				<map:generate src="{global:id-path}/{1}.txt"/>
				<map:serialize type="xml"/>
			</map:match>

			<map:match pattern="id/*">
				<map:generate src="{global:id-path}/{1}.txt"/>
				<map:transform src="xslt/display.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="id" value="{1}"/>
					<map:parameter name="serverName" value="{request:serverName}"/>
					<map:parameter name="serverPort" value="{request:serverPort}"/>
					<map:parameter name="requestURI" value="{request:requestURI }"/>
					<map:parameter name="flickr_api_key" value="{global:flickr_api_key}"/>
				</map:transform>
				<map:transform type="cinclude"/>
				<map:serialize type="xhtml+rdfa"/>
			</map:match>

			<!-- data dumps -->
			<map:match pattern="nomisma.org.xml">
				<map:read src="dump/nomisma.org.xml" mime-type="application/xhtml+xml"/>
			</map:match>
			<map:match pattern="nomisma.org.rdf">
				<map:read src="dump/nomisma.org.rdf" mime-type="application/rdf+xml"/>
			</map:match>
			<map:match pattern="nomisma.org.ttl">
				<map:read src="dump/nomisma.org.ttl" mime-type="application/x-turtle"/>
			</map:match>
			<map:match pattern="nomisma.org.rj">
				<map:read src="dump/nomisma.org.rj" mime-type="application/rdf+json"/>
			</map:match>
			<map:match pattern="nomisma.org.nt">
				<map:read src="dump/nomisma.org.nt" mime-type="text/plain"/>
			</map:match>
			
			<!-- RDF for contributing to Pelagios -->
			<map:match pattern="pelagios.void.rdf">
				<map:read src="xml/pelagios.void.rdf" mime-type="application/rdf+xml"/>
			</map:match>
			
			<map:match pattern="pelagios.rdf">
				<map:read src="dump/pelagios.rdf" mime-type="application/rdf+xml"/>
			</map:match>
			
			<map:match pattern="get_pelagios">
				<map:select type="parameter">
					<map:parameter name="parameter-selector-test" value="{request-param:q}"/>
					<map:when test="">
						<map:generate src="{global:solr-url}select?q={url-encode:pleiades_uri:*}&amp;rows=100000"/>
					</map:when>
					<map:otherwise>
						<map:generate src="{global:solr-url}select?q={url-encode:{request-param:q} AND pleiades_uri:*}&amp;rows=100000"/>
					</map:otherwise>
				</map:select>		
				<map:transform src="xslt/geographic/pelagios.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="rdf"/>
			</map:match>
			
			<!-- flickr page -->
			<map:match pattern="flickr">
				<map:generate src="xml/empty.xml" label="record"/>
				<map:transform src="xslt/flickr.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="flickr_api_key" value="{global:flickr_api_key}"/>
				</map:transform>
				<map:serialize type="xhtml+rdfa"/>
			</map:match>

			<!-- sparql interface -->
			<map:match pattern="sparql">
				<map:generate src="xml/empty.xml" label="record"/>
				<map:transform src="xslt/sparql.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="xhtml+rdfa"/>
			</map:match>

			<!-- create query wrapper -->
			<map:match pattern="query">
				<!-- generate or read -->
				<map:select type="parameter">
					<map:parameter name="parameter-selector-test" value="{request-param:output}"/>
					<map:when test="xml">
						<map:generate src="{global:sparql-url}?query={url-encode:{request-param:query}}&amp;output={request-param:output}" label="content"/>
					</map:when>
					<map:otherwise>
						<map:read src="{global:sparql-url}?query={url-encode:{request-param:query}}&amp;output={request-param:output}" label="content"/>
					</map:otherwise>
				</map:select>
				<!-- apply transform when xml is output and a stylesheet is selected -->
				<map:select type="parameter">
					<map:parameter name="parameter-selector-test" value="{request-param:output}"/>
					<map:when test="xml">
						<map:select type="parameter">
							<map:parameter name="parameter-selector-test" value="{request-param:stylesheet}"/>
							<map:when test=""/>
							<map:otherwise>
								<map:transform src="xslt/sparql/{request-param:stylesheet}" label="basiccontent" type="xslt-saxon">
									<map:parameter name="use-request-parameters" value="true"/>
								</map:transform>
							</map:otherwise>
						</map:select>
					</map:when>
				</map:select>
				<!-- serializer -->
				<map:select type="parameter">
					<map:parameter name="parameter-selector-test" value="{request-param:output}"/>
					<map:when test="xml">
						<map:serialize type="xml"/>
					</map:when>
					<map:otherwise>
						<map:serialize type="text"/>
					</map:otherwise>
				</map:select>
			</map:match>
			
			<!-- NUDS page -->
			<map:match pattern="nuds/numismatic_database_standard">
				<map:generate src="xml/config.xml" label="record"/>
				<map:transform src="xslt/nuds.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="xhtml+rdfa"/>
			</map:match>

			<!-- SPARQL widget templates -->
			<map:match pattern="widget">
				<map:generate src="xml/empty.xml"/>
				<map:transform type="xslt-saxon" src="xslt/sparql/templates.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="endpoint" value="{global:sparql-url}"/>
					<map:parameter name="geonames_api_key" value="{global:geonames_api_key}"/>
				</map:transform>
				<map:select type="parameter">
					<map:parameter name="parameter-selector-test" value="{request-param:format}"/>
					<map:when test="json">
						<map:serialize type="text"/>
					</map:when>
					<map:otherwise>
						<map:serialize type="xml"/>
					</map:otherwise>
				</map:select>
			</map:match>

			<!-- AJAX -->
			<map:match pattern="get_mint_coords">
				<map:generate src="{global:id-path}/{request-param:id}.txt"/>
				<map:transform type="xslt-saxon" src="xslt/ajax/get_mint_coords.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>

			<!-- APIs-->
			<map:match pattern="apis">
				<map:generate src="xml/empty.xml"/>
				<map:transform type="xslt-saxon" src="xslt/apis.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="html"/>
			</map:match>


			<map:match pattern="apis/avgAxis">
				<map:read src="cocoon:/widget?constraints={request-param:constraints}&amp;template=avgMeasurement&amp;measurement=axis"/>
			</map:match>
			<map:match pattern="apis/avgDiameter">
				<map:read src="cocoon:/widget?constraints={request-param:constraints}&amp;template=avgMeasurement&amp;measurement=diameter"/>
			</map:match>
			<map:match pattern="apis/avgWeight">
				<map:read src="cocoon:/widget?constraints={request-param:constraints}&amp;template=avgMeasurement&amp;measurement=weight"/>
			</map:match>
			<map:match pattern="apis/closingDate">
				<map:read src="cocoon:/widget?identifiers={request-param:identifiers}&amp;template=closingDate"/>
			</map:match>
			<map:match pattern="apis/getNuds">
				<map:generate src="xml/empty.xml"/>
				<map:transform type="xslt-saxon" src="xslt/apis/getNuds.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="id-path" value="{global:id-path}"/>
				</map:transform>
				<map:serialize type="rdf"/>
			</map:match>
			<map:match pattern="apis/getRdf">
				<map:generate src="xml/empty.xml"/>
				<map:transform type="xslt-saxon" src="xslt/apis/getRdf.xsl" label="basiccontent">
					<map:parameter name="use-request-parameters" value="true"/>
					<map:parameter name="id-path" value="{global:id-path}"/>
				</map:transform>
				<map:serialize type="rdf"/>
			</map:match>
			<map:match pattern="apis/getLabel">
				<map:read src="cocoon:/widget?uri={request-param:uri}&amp;lang={request-param:lang}&amp;template=getLabel"/>
			</map:match>


			<!-- Atom -->
			<map:match pattern="feed">
				<map:redirect-to uri="feed/"/>
			</map:match>

			<map:match pattern="feed/">
				<map:select type="parameter">
					<map:parameter name="parameter-selector-test" value="{request-param:q}"/>
					<map:when test="">
						<map:generate
							src="{global:solr-url}select?q=*:*&amp;sort={url-encode:timestamp desc}&amp;rows=100&amp;start={request-param:start}"/>
					</map:when>
					<map:otherwise>
						<map:generate
							src="{global:solr-url}select?q={url-encode:{request-param:q}}&amp;sort={url-encode:timestamp desc}&amp;rows=100&amp;start={request-param:start}"/>
					</map:otherwise>
				</map:select>
				<map:transform src="xslt/feed.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="atom"/>
			</map:match>

			<!-- opensearch definition -->
			<!--<map:match pattern="opensearch.xml">
				<map:generate src="{global:exist-url}{global:collection-name}/config.xml" label="record"/>
				<map:transform src="xslt/linked_data/opensearch.xsl" label="basiccontent" type="xslt-saxon">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>-->
		</map:pipeline>
	</map:pipelines>
</map:sitemap>
